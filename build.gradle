plugins {
    id 'java'
    id 'java-library'
    id 'org.springframework.boot' version '3.0.4' apply false
    id 'io.spring.dependency-management' version '1.1.0'
}

version = '0.0.1'

ext {
    set('springCloudVersion', "2022.0.2")
    ORG_SPRINGBOOTFRAMEWORK_BOOT_VERSION = '3.0.4'
    MAPSTRUCT_VERSION = '1.5.3.Final'
    JJWT_VERSION = '0.11.5'
    JUNIT_VERSION = '4.13.2'
    JUPITER_VERSION = '5.8.1'
    OPENFEIGN_VERSION = '4.0.2'
}

subprojects {
    sourceCompatibility = '17'

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: "io.spring.dependency-management"

    repositories {
        mavenCentral()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        compileOnly("com.google.code.findbugs:jsr305:3.0.2")

        // ------LOMBOK------
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
//        // ------WEB------
//        implementation "org.springframework.boot:spring-boot-starter-web"
//        implementation "org.springframework.cloud:spring-cloud-starter-openfeign:$OPENFEIGN_VERSION"

//        // ------MAPSTRUCT------
//        implementation "org.mapstruct:mapstruct:$MAPSTRUCT_VERSION"
//        annotationProcessor "org.mapstruct:mapstruct-processor:$MAPSTRUCT_VERSION"

//        // ------DATA_BASE------
//        runtimeOnly 'org.postgresql:postgresql'
//        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//        implementation 'org.springframework.boot:spring-boot-starter-validation'

        // JJWT
//        implementation "io.jsonwebtoken:jjwt-api:$JJWT_VERSION"
//        runtimeOnly "io.jsonwebtoken:jjwt-impl:$JJWT_VERSION"
//        runtimeOnly "io.jsonwebtoken:jjwt-jackson:$JJWT_VERSION"
//        // or "io.jsonwebtoken:jjwt-gson:$JJWT_VERSION" for gson
//
//        // ------TEST------
//        testImplementation "org.springframework.boot:spring-boot-starter-test"
//        testImplementation "org.junit.jupiter:junit-jupiter-api:$JUPITER_VERSION"
//        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$JUPITER_VERSION"
//        testImplementation "junit:junit:$JUNIT_VERSION"
    }

    dependencyManagement {
        imports {
            mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
        }
    }

    test {
        useJUnitPlatform()
    }

}
repositories {
    mavenCentral()
}